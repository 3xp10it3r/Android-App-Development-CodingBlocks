package com.exploiter.project.happytictactoe

import android.net.ipsec.ike.TunnelModeChildSessionParams
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.view.View
import android.view.View.OnClickListener
import android.widget.Button
import kotlinx.android.synthetic.main.activity_main.*

class MainActivity : AppCompatActivity(), OnClickListener {
    var PLAYER = true
    var TURN_COUNT = 0

    lateinit var board : Array<Array<Button>>

    val boardStatus = Array(3){IntArray(3)}

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        board = arrayOf(
            arrayOf(button1,button2,button3),
            arrayOf(button4,button5,button6),
            arrayOf(button7,button8,button9)
        )

        for (i in board){
            for(button in i){
                button.setOnClickListener(this)
            }
        }


        initializeBoard()

        btnRst.setOnClickListener{
            TURN_COUNT=0
            PLAYER=true
            initializeBoard()
            tvDisp.text = "Player X Turn"
        }
    }

    private fun initializeBoard(){
        for(i in 0..2){
            for(j in 0..2){
                board[i][j].isEnabled = true
                boardStatus[i][j] = -1
                board[i][j].text=""
            }
        }
    }

    override fun onClick(view: View) {
        when(view.id){
            R.id.button1 ->{
                updateValue(row=0,col=0,player=PLAYER)
            }
            R.id.button2 ->{
                updateValue(row=0,col=1,player=PLAYER)
            }
            R.id.button3 ->{
                updateValue(row=0,col=2,player=PLAYER)
            }
            R.id.button4 ->{
                updateValue(row=1,col=0,player=PLAYER)
            }
            R.id.button5 ->{
                updateValue(row=1,col=1,player=PLAYER)
            }
            R.id.button6 ->{
                updateValue(row=1,col=2,player=PLAYER)
            }
            R.id.button7 ->{
                updateValue(row=2,col=0,player=PLAYER)
            }
            R.id.button8 ->{
                updateValue(row=2,col=1,player=PLAYER)
            }
            R.id.button9 ->{
                updateValue(row=2,col=2,player=PLAYER)
            }
        }
        TURN_COUNT++
        PLAYER=!PLAYER
        if(PLAYER){
            textViewDisplay("Player X Turn")
        }else{
            textViewDisplay("Player O Turn")
        }

        if(TURN_COUNT == 9){
            textViewDisplay("Game Draw")
        }

        checkWinner()
    }

    private fun textViewDisplay(text: String) {
        tvDisp.text = text
        if(text.contains("Winner")){
            disableButton()
        }
    }

    private fun checkWinner() {
        //Horizontal Checks
        for(i in 0..2){
            if(boardStatus[i][0] == boardStatus[i][1] && boardStatus[i][0] == boardStatus[i][2] ){
                if(boardStatus[i][0]==1){
                    textViewDisplay("Player X Winner")
                    break
                }else if(boardStatus[i][0]==0){
                    textViewDisplay("Player O Winner")
                    break
                }
            }
        }
        //vertical Check
        for(i in 0..2){
            if(boardStatus[0][i] == boardStatus[1][i] && boardStatus[1][i] == boardStatus[2][i] ){
                if(boardStatus[0][i]==1){
                    textViewDisplay("Player X Winner")
                    break
                }else if(boardStatus[0][i]==0){
                    textViewDisplay("Player O Winner")
                    break
                }
            }
        }
        //diagonal check
        if(boardStatus[0][0] ==boardStatus[1][1] && boardStatus[0][0] == boardStatus[2][2]){
            if(boardStatus[0][0]==1){
                textViewDisplay("Player X Winner")
            }else if(boardStatus[0][0]==0){
                textViewDisplay("Player O Winner")
            }
        }

        if(boardStatus[0][2] ==boardStatus[1][1] && boardStatus[0][2] == boardStatus[2][0]){
            if(boardStatus[2][0]==1){
                textViewDisplay("Player X Winner")
            }else if(boardStatus[2][0]==0){
                textViewDisplay("Player O Winner")
            }
        }
    }

    private fun disableButton(){
        for(i in board){
            for(button in i){
                button.isEnabled=false
            }
        }
    }
    private fun updateValue(row: Int, col: Int, player: Boolean) {
        val text = if(player) "X" else "O"
        val value = if(player) 1 else 0
        board[row][col].apply {
            this.text=text
            isEnabled=false
        }
        boardStatus[row][col]=value
    }
}